#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'dotenv/load'
require './lib/config/sentry'
require 'filelock'
require './lib/cli'
require './lib/project'
require './lib/trap'

# AutoHCK module
module AutoHCK
  cli = CLI.new
  cli.parse(ARGV)

  ENV.store 'LC_ALL', 'en_US.UTF-8'

  AUTOHCK_RETRIES = 5

  def self.clean_threads
    Thread.list.each do |thread|
      thread.exit unless Thread.main.eql?(thread)
    end
  end

  Thread.abort_on_exception = true
  Thread.report_on_exception = false

  begin
    @project = Project.new(cli)
    @project.run if @project.prepare
    @project.close
  rescue StandardError => e
    Signal.trap('TERM') do
      @project&.logger&.warn('SIGTERM(*) received, ignoring...')
    end
    Sentry.capture_exception(e)
    @project&.log_exception(e, 'fatal')
    @project&.handle_error
    @project&.close
    clean_threads
    exit(1)
  end
end
